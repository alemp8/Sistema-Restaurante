<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wGi0ftIVXttEwAAAABJRU5ErkJggg==
</value>
  </data>
</root>